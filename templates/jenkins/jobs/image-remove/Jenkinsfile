@Library("github.com/opspresso/builder")
def butler = new com.opspresso.builder.Butler()
def label = "worker-${UUID.randomUUID().toString()}"
def IMAGE_NAME = "${SERVICE_GROUP}-${SERVICE_NAME}"
properties([
  buildDiscarder(logRotator(daysToKeepStr: "60", numToKeepStr: "30"))
])
podTemplate(label: label, containers: [
  containerTemplate(name: "builder", image: "opspresso/builder:kube", command: "cat", ttyEnabled: true, alwaysPullImage: true)
], volumes: [
  hostPathVolume(mountPath: "/var/run/docker.sock", hostPath: "/var/run/docker.sock"),
  hostPathVolume(mountPath: "/home/jenkins/.m2", hostPath: "/home/jenkins/.m2")
]) {
  node(label) {
    stage("Prepare") {
      container("builder") {
        butler.prepare(IMAGE_NAME)
      }
    }
    stage("Remove") {
      container("builder") {
        try {
          // remove(cluster, namespace)
          butler.remove(CLUSTER, NAMESPACE)
          butler.success(SLACK_TOKEN, "Remove")
        } catch (e) {
          butler.failure(SLACK_TOKEN, "Remove")
          throw e
        }
      }
    }
  }
}
